package com.myzaker.imagescan.adapter;import java.util.List;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import com.myzaker.imagescan.R;import com.myzaker.imagescan.ShowImageActivity;import com.myzaker.imagescan.Imageload.BitmapCache;import com.myzaker.imagescan.Imageload.LocalImageView;import com.myzaker.imagescan.bean.ImageBean;public class ImageGridAdpater extends BaseAdapter {	List<ImageBean> imagesData;	Context context;	LayoutInflater mInflater;	OnClickListener mPreviewClickListener;	public ImageGridAdpater(Context context, List<ImageBean> imagesData) {		this.context = context;		this.imagesData = imagesData;		mInflater = LayoutInflater.from(context);	}	public void setOnPreviewClicklistener(OnClickListener mOnClickListener) {		this.mPreviewClickListener = mOnClickListener;	}	@Override	public int getCount() {		if (imagesData != null) {			return imagesData.size();		}		return 0;	}	public void setImageDatas(List<ImageBean> imagesData) {		this.imagesData = imagesData;	}	@Override	public Object getItem(int position) {		if (imagesData != null) {			return imagesData.get(position);		}		return null;	}	@Override	public long getItemId(int position) {		return 0;	}	@Override	public View getView(int position, View convertView, ViewGroup parent) {		final ViewHolder viewHolder;		final ImageBean currentImageBean = imagesData.get(position);		if (convertView == null) {			convertView = mInflater.inflate(R.layout.grid_child_item, parent,					false);			viewHolder = new ViewHolder();			viewHolder.mImageView = (LocalImageView) convertView					.findViewById(R.id.child_image);			viewHolder.mPreviewBtn = (ImageView) convertView					.findViewById(R.id.preview);			viewHolder.selectView = (View) convertView					.findViewById(R.id.select_view);			convertView.setTag(viewHolder);		} else {			viewHolder = (ViewHolder) convertView.getTag();		}		viewHolder.selectView				.setBackgroundColor(ShowImageActivity.mSkinUtil.gridItemSelectColor);		viewHolder.mPreviewBtn				.setImageResource(ShowImageActivity.mSkinUtil.gridItemSelectRes);		viewHolder.mPreviewBtn.setTag(position);		viewHolder.mPreviewBtn.setOnClickListener(mPreviewClickListener);		bindData(currentImageBean, viewHolder);		return convertView;	}	protected void bindData(ImageBean mImageBean, ViewHolder viewHolder) {		if (mImageBean.isSelect()) {			viewHolder.selectView.setVisibility(View.VISIBLE);		} else {			viewHolder.selectView.setVisibility(View.INVISIBLE);		}		String path = mImageBean.getImagePath();		viewHolder.mImageView				.setDefaultImageResId(ShowImageActivity.mSkinUtil.gridItemDefaultRes);		viewHolder.mImageView.setImageUrl("file://" + path,				BitmapCache.getImageLoader());	}	public static class ViewHolder {		public LocalImageView mImageView;		public ImageView mPreviewBtn;		public View selectView;	}}