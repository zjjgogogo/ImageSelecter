package com.test.imagedemo;import java.util.List;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import com.myzaker.imagescan.Imageload.UniversalImageLoadTool;import com.myzaker.imagescan.bean.ImageBean;public class SelectImageGridAdpater extends BaseAdapter {	List<ImageBean> imagesData;	Context context;	LayoutInflater mInflater;	OnClickListener mPreviewClickListener;	public SelectImageGridAdpater(Context context, List<ImageBean> imagesData) {		this.context = context;		this.imagesData = imagesData;		mInflater = LayoutInflater.from(context);	}	public void setOnPreviewClicklistener(OnClickListener mOnClickListener) {		this.mPreviewClickListener = mOnClickListener;	}	@Override	public int getCount() {		if (imagesData != null) {			return imagesData.size();		}		return 0;	}	public void setImageDatas(List<ImageBean> imagesData) {		this.imagesData = imagesData;	}	@Override	public Object getItem(int position) {		if (imagesData != null) {			return imagesData.get(position);		}		return null;	}	@Override	public long getItemId(int position) {		return 0;	}	@Override	public View getView(int position, View convertView, ViewGroup parent) {		final ViewHolder viewHolder;		final ImageBean currentImageBean = imagesData.get(position);		if (convertView == null) {			convertView = mInflater.inflate(R.layout.image_child_item, parent,					false);			viewHolder = new ViewHolder();			viewHolder.mImageView = (ImageView) convertView					.findViewById(R.id.child_image);			convertView.setTag(viewHolder);		} else {			viewHolder = (ViewHolder) convertView.getTag();		}		bindData(currentImageBean, viewHolder);		return convertView;	}	protected void bindData(ImageBean mImageBean, ViewHolder viewHolder) {		String path = mImageBean.getImagePath();		UniversalImageLoadTool.displayImage("file://" + path,				viewHolder.mImageView, R.drawable.ic_launcher);	}	public static class ViewHolder {		public ImageView mImageView;	}}